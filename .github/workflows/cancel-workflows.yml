name: Cancel Workflow Runs

on:
  workflow_dispatch:
    inputs:
      workflow_name:
        description: 'Name of workflow to cancel (leave empty to cancel all)'
        required: false
        default: ''
      run_id:
        description: 'Specific run ID to cancel (leave empty to cancel all running workflows)'
        required: false
        default: ''

jobs:
  cancel-workflows:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Cancel specific workflow run
        if: ${{ github.event.inputs.run_id != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runId = '${{ github.event.inputs.run_id }}';
            console.log(`Cancelling workflow run ID: ${runId}`);
            
            try {
              await github.rest.actions.cancelWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: runId
              });
              console.log(`Successfully cancelled workflow run ${runId}`);
            } catch (error) {
              console.error(`Failed to cancel workflow run ${runId}:`, error.message);
              throw error;
            }

      - name: Cancel workflows by name or all running workflows
        if: ${{ github.event.inputs.run_id == '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const workflowName = '${{ github.event.inputs.workflow_name }}';
            
            // Get all running workflows
            const workflows = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              status: 'in_progress'
            });
            
            console.log(`Found ${workflows.data.workflow_runs.length} running workflows`);
            
            let cancelled = 0;
            for (const run of workflows.data.workflow_runs) {
              // Skip the current cancellation workflow
              if (run.id === context.runId) {
                continue;
              }
              
              // If workflow name is specified, only cancel matching workflows
              if (workflowName && !run.name.includes(workflowName)) {
                continue;
              }
              
              try {
                await github.rest.actions.cancelWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id
                });
                console.log(`Cancelled workflow: ${run.name} (ID: ${run.id})`);
                cancelled++;
              } catch (error) {
                console.error(`Failed to cancel workflow ${run.name} (ID: ${run.id}):`, error.message);
              }
            }
            
            console.log(`Successfully cancelled ${cancelled} workflow runs`);
            
            if (cancelled === 0) {
              console.log('No workflows were cancelled. This could mean:');
              console.log('- No workflows are currently running');
              console.log('- The specified workflow name was not found');
              console.log('- All running workflows have already been cancelled');
            }